#!/bin/bash

# Trinity Protocol Pre-push Hook  
# Comprehensive validation before pushing to remote repository

echo "üõ°Ô∏è  Trinity Protocol: Pre-push validation starting..."

# Set colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Check if node is available
if ! command -v node &> /dev/null; then
    echo -e "${RED}‚ùå Node.js is required for Trinity validation${NC}"
    exit 1
fi

# Check if trinity validation script exists
TRINITY_SCRIPT="scripts/trinity-validation.cjs"
if [ ! -f "$TRINITY_SCRIPT" ]; then
    echo -e "${RED}‚ùå Trinity validation script not found: $TRINITY_SCRIPT${NC}"
    echo "Please ensure Trinity Protocol is properly installed"
    exit 1
fi

echo -e "${PURPLE}üöÄ Pre-push Trinity Protocol validation...${NC}"
echo -e "${BLUE}This includes full test suite execution and synchronization check${NC}"
echo ""

# Run Trinity pre-push validation (includes test suite)
echo -e "${BLUE}üß™ Running comprehensive Trinity validation...${NC}"
if node "$TRINITY_SCRIPT" pre-push; then
    echo -e "${GREEN}‚úÖ Trinity pre-push validation passed!${NC}"
    
    # Show Trinity score summary
    echo -e "${PURPLE}üìä Trinity Protocol compliance verified${NC}"
    echo -e "${GREEN}üéØ Ready to push to remote repository${NC}"
    
else
    echo -e "${RED}‚ùå Trinity pre-push validation failed!${NC}"
    echo ""
    echo -e "${YELLOW}üö´ Push blocked by Trinity Protocol${NC}"
    echo ""
    echo "Common issues to check:"
    echo "‚Ä¢ Test suite failures"
    echo "‚Ä¢ Trinity synchronization gaps"
    echo "‚Ä¢ Missing documentation updates"
    echo "‚Ä¢ Import path resolution errors"
    echo ""
    echo "Run these commands to debug:"
    echo "  npm test                    # Check test suite"
    echo "  npm run trinity:validate    # Full Trinity validation"
    echo "  npm run trinity:mid-dev     # Development validation"
    exit 1
fi

# Additional security check for sensitive files
echo -e "${BLUE}üîê Checking for sensitive data...${NC}"
SENSITIVE_PATTERNS="password|secret|api_key|private_key|token"
COMMITS_TO_PUSH=$(git rev-list @{u}..HEAD 2>/dev/null || git rev-list HEAD | head -10)

if [ -n "$COMMITS_TO_PUSH" ]; then
    for COMMIT in $COMMITS_TO_PUSH; do
        SENSITIVE_FOUND=$(git show --name-only --pretty=format: $COMMIT | xargs -I {} sh -c 'if [ -f "{}" ]; then grep -l -i -E "'$SENSITIVE_PATTERNS'" "{}" 2>/dev/null || true; fi' | head -5)
        
        if [ -n "$SENSITIVE_FOUND" ]; then
            echo -e "${YELLOW}‚ö†Ô∏è  Potential sensitive data in commit $COMMIT:${NC}"
            echo "$SENSITIVE_FOUND" | head -3
            echo ""
            echo "Please review these files before pushing"
        fi
    done
fi

# Check branch protection
CURRENT_BRANCH=$(git branch --show-current 2>/dev/null || git rev-parse --abbrev-ref HEAD)
if [ "$CURRENT_BRANCH" = "main" ] || [ "$CURRENT_BRANCH" = "master" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Pushing to protected branch: $CURRENT_BRANCH${NC}"
    echo -e "${BLUE}üõ°Ô∏è  Trinity Protocol ensures code quality on main branches${NC}"
fi

echo ""
echo -e "${GREEN}üéâ Pre-push Trinity validation completed successfully!${NC}"
echo -e "${PURPLE}üì° Ready to push with full Trinity Protocol compliance${NC}"
exit 0